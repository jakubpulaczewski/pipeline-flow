{
    "name": "Pipeline Flow Dev Container",
    "image": "mcr.microsoft.com/devcontainers/python:3.12",
	"features": {
		"ghcr.io/prulloac/devcontainer-features/pre-commit:1": {},
		"ghcr.io/devcontainers-extra/features/ruff:1": {
            "version": "latest"
        },
		"ghcr.io/devcontainers-extra/features/poetry:2": {},
		// "ghcr.io/devcontainers-contrib/features/spark-sdkman:2": {
        //     "jdkVersion": "11"
		// },
        // Enable to run create child docker containers inside a container (Docker-in-Docker)
        // This is useful for running integration tests in a containerized environment.
        "ghcr.io/devcontainers/features/docker-in-docker:2": {}
    },

	"mounts": [
		"source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached"
	],
    "runArgs": [
        "--privileged",
        "--add-host=host.docker.internal:host-gateway"
    ],
    // Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"python.pythonPath" : "/usr/local/bin/python",
				"python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
				"python.languageServer": "Pylance",
				"python.testing.pytestEnabled": true,
				"autoDocstring.docstringFormat": "google",
				"python.analysis.extraPaths": [
					"${workspaceFolder}/pipeline_flow",
					"${workspaceFolder}/tests"
				],
				"terminal.integrated.env.linux": {
					"PYTHONPATH": "${workspaceFolder}/pipeline_flow:${workspaceFolder}/tests"
				}
			},

			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
                "ms-python.python",
                "eamodio.gitlens",
                "njpwerner.autodocstring",
                "charliermarsh.ruff",
                "ms-pyright.pyright",
                "tht13.rst-vscode"
            ]
		}


	},
	"postCreateCommand": "chmod 700 /home/vscode/.ssh && chmod 600 /home/vscode/.ssh/id_rsa",

}
